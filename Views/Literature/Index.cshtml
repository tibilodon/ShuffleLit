@using Microsoft.AspNetCore.Identity
@using ShuffleLit.Interfaces
@using ShuffleLit.ViewModels
@model IEnumerable<Literature>

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject IPlaceholderImgService PlaceholderImg

@{
    ViewData["Title"] = "Lits";
}


<div class="album py-5 bg-light">
    <div class="container">

        <div class="row">

            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="card mb-4 box-shadow">
                        <div class="card-body">
                            <!--thumbnail-->
                            <img class="card-img-top" src="@PlaceholderImg.PlaceholderImg(item.LiteratureCategory)" width="100%" height="225" alt="Card image cap">

                            <p class="card-text">@item.Title</p>
                            <p class="card-text">@item.Description</p>

                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        if (item.AppUserId != UserManager.GetUserId(User) && item.LiteratureCollections.Any(lc => lc.AppUserId == UserManager.GetUserId(User) && item.Id == lc.LiteratureId))
                                        {
                                            <strong class="d-block">In Collection</strong>

                                        }
                                        else if (item.AppUserId == UserManager.GetUserId(User))
                                        {
                                            <strong class="d-block">Creator</strong>

                                        }


                                    }
                                    <small class="text-muted">@item.LiteratureCategory</small>
                                </div>
                                <div class="btn-group">
                                    <!--indicate collection state-->


                                    <a asp-controller="Literature" asp-action="Detail" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">View</a>
                                    @if (UserManager.GetUserId(User) == item.AppUserId)
                                    {
                                        <a asp-controller="Literature" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                    }
                                    <!--Admin access-->
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("admin"))
                                    {
                                        <a asp-controller="Literature" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                        <a asp-controller="Literature" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Delete</a>

                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>
</div>